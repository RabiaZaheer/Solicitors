@model Solicitor.Models.Claim
@{
    AjaxOptions options = new AjaxOptions
    {
        HttpMethod = "Post",
        Url = "/Solicitor/Claim/Claim ",
        OnBegin = "OnBeginMethod",
        OnFailure = "OnFailtureMethod",
        OnSuccess = "OnSuccessMethod",
        OnComplete = "OnCompleteMethod",
        LoadingElementId = "loading"
    };

}

<div class="container-claim row-fluid">
    <div class="container-claim-inner row-fluid">
        <h2>MAKE A CLAIM</h2>

        <div class="message"></div>

        @using (Ajax.BeginForm(options))
        {
            @Html.AntiForgeryToken()

            <div class="form row-fluid">

                <div id="loading" style="display:none;">
                    <img src="~/Images/loader/ajax-loader.gif" />
                </div>

                <div class="lbl row-fluid val">Name</div>
                <div class="ctrl row-fluid">
                    @Html.TextBoxFor(model => model.Name, new { @class = "txtbox", placeholder = "Name" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "val-mess" })
                </div>
                <div class="lbl row-fluid val">E-mail</div>
                <div class="ctrl row-fluid">
                    @Html.TextBoxFor(model => model.Email, new { @class = "txtbox", placeholder = "E-mail" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "val-mess" })
                </div>
                <div class="lbl row-fluid val">Contact Number</div>
                <div class="ctrl row-fluid">
                    @Html.TextBoxFor(model => model.ContactNo, new { @class = "txtbox", minlength = "5", maxlength = "20", placeholder = "Contact Number" })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "val-mess" })
                </div>
                <div class="lbl row-fluid val">Description</div>
                <div class="ctrl row-fluid">
                    @Html.TextAreaFor(model => model.Detail, new { @class = "txtbox multiline", placeholder = "Please provide brief description no more than 1000 characters...." })
                    @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "val-mess" })
                </div>
                <div class="ctrl row-fluid">
                    <input type="submit" id="btnCreate" value="MAKE A CLAIM" class="btn btn-black" />
                </div>

            </div>
        }
    </div>
</div>

<script type="text/javascript">
    var isError = false;
    function OnBeginMethod() {
        $(".message").html("");
    }

    function OnFailtureMethod(error) {
        $(".message").html('<div class="validation validation-error row">An error has occured, please try again.</div>');
        isError = true;
    }

    function OnSuccessMethod(data) {
        $(".message").html('<div class="validation validation-success row">Thankyou, soon one of our team member will contact you.</div>');
        $("#Name").val('');
        $("#Email").val('');
        $("#ContactNo").val('');
        $("#Detail").val('');
    }

    function OnCompleteMethod(data, status) {
        if (!isError) {
            $(".message").html('<div class="validation validation-success row">Thankyou, soon one of our team member will contact you.</div>');
        }
    }
</script>
